{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/l/javascript-client/training/src/pages/InputDemo/InputDemo.jsx\";\nimport React from 'react';\nimport * as yup from 'yup';\nimport { TextField, SelectField, RadioField, ButtonField } from '../../components';\nimport { selectOptions, radioOptionsCricket, radioOptionsFootball } from '../../config/constants';\n\nclass InputDemo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.schema = yup.object().shape({\n      name: yup.string().required('Name is a required field').min(3),\n      sport: yup.string().required('Sport is a required field'),\n      cricket: yup.string().when('sport', {\n        is: 'cricket',\n        then: yup.string().required('What you do is a required field')\n      }),\n      football: yup.string().when('sport', {\n        is: 'football',\n        then: yup.string().required('What you do is a required field')\n      })\n    });\n\n    this.handleNameChange = e => {\n      this.setState({\n        name: e.target.value\n      }, () => {\n        console.log(this.state);\n      });\n    };\n\n    this.handleSportChange = e => {\n      this.setState({\n        sport: e.target.value\n      }, () => console.log(this.state));\n\n      if (e.target.value === 'Select') {\n        this.setState({\n          sport: ''\n        });\n      }\n\n      return e.target.value === 'cricket' ? this.setState({\n        football: ''\n      }) : this.setState({\n        cricket: ''\n      });\n    };\n\n    this.handlePositionChange = e => {\n      const {\n        sport\n      } = this.state;\n      return sport === 'cricket' ? this.setState({\n        cricket: e.target.value\n      }, () => console.log(this.state)) : this.setState({\n        football: e.target.value\n      }, () => console.log(this.state));\n    };\n\n    this.RadioOption = () => {\n      let {\n        radioValue\n      } = this.state;\n      const {\n        sport\n      } = this.state;\n\n      if (sport === 'cricket') {\n        radioValue = radioOptionsCricket;\n      } else if (sport === 'football') {\n        radioValue = radioOptionsFootball;\n      }\n\n      return radioValue;\n    };\n\n    this.getError = field => {\n      const {\n        touched\n      } = this.state;\n\n      if (touched[field] && this.hasErrors()) {\n        try {\n          this.schema.validateSyncAt(field, this.state);\n        } catch (err) {\n          return err.message;\n        }\n      }\n\n      return true;\n    };\n\n    this.hasErrors = () => {\n      try {\n        this.schema.validateSync(this.state);\n      } catch (err) {\n        return true;\n      }\n\n      return false;\n    };\n\n    this.isTouched = field => {\n      const {\n        touched\n      } = this.state;\n      this.setState({\n        touched: { ...touched,\n          [field]: true\n        }\n      });\n    };\n\n    this.state = {\n      name: '',\n      sport: '',\n      cricket: '',\n      football: '',\n      touched: {\n        name: false,\n        sport: false,\n        cricket: false,\n        football: false\n      }\n    };\n  }\n\n  render() {\n    const {\n      sport\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          error: this.getError('name'),\n          onChange: this.handleNameChange,\n          onBlur: () => this.isTouched('name')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Select the game you play?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n          error: this.getError('sport'),\n          onChange: this.handleSportChange,\n          options: selectOptions,\n          defaultText: \"Select\",\n          onBlur: () => this.isTouched('sport')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: sport === '' || sport === 'Select' ? '' : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"What you do?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 28\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(RadioField, {\n              error: this.getError(sport),\n              options: this.RadioOption(),\n              onChange: this.handlePositionChange,\n              onBlur: () => this.isTouched(sport)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(ButtonField, {\n            value: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ButtonField, {\n            value: \"Submit\",\n            disabled: this.hasErrors()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default InputDemo;","map":{"version":3,"sources":["/home/l/javascript-client/training/src/pages/InputDemo/InputDemo.jsx"],"names":["React","yup","TextField","SelectField","RadioField","ButtonField","selectOptions","radioOptionsCricket","radioOptionsFootball","InputDemo","Component","constructor","props","schema","object","shape","name","string","required","min","sport","cricket","when","is","then","football","handleNameChange","e","setState","target","value","console","log","state","handleSportChange","handlePositionChange","RadioOption","radioValue","getError","field","touched","hasErrors","validateSyncAt","err","message","validateSync","isTouched","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport * as yup from 'yup';\nimport {\n  TextField, SelectField, RadioField, ButtonField,\n} from '../../components';\nimport { selectOptions, radioOptionsCricket, radioOptionsFootball } from '../../config/constants';\n\nclass InputDemo extends React.Component {\n  schema = yup.object().shape({\n    name: yup.string().required('Name is a required field').min(3),\n    sport: yup.string().required('Sport is a required field'),\n    cricket: yup.string().when('sport', { is: 'cricket', then: yup.string().required('What you do is a required field') }),\n    football: yup.string().when('sport', { is: 'football', then: yup.string().required('What you do is a required field') }),\n  });\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      sport: '',\n      cricket: '',\n      football: '',\n      touched: {\n        name: false,\n        sport: false,\n        cricket: false,\n        football: false,\n      },\n    };\n  }\n\n    handleNameChange = (e) => {\n      this.setState({ name: e.target.value }, () => {\n        console.log(this.state);\n      });\n    }\n\n    handleSportChange = (e) => {\n      this.setState({ sport: e.target.value }, () => console.log(this.state));\n      if (e.target.value === 'Select') {\n        this.setState({ sport: '' });\n      }\n      return e.target.value === 'cricket' ? this.setState({ football: '' }) : this.setState({ cricket: '' });\n    }\n\n    handlePositionChange = (e) => {\n      const { sport } = this.state;\n      return sport === 'cricket' ? this.setState({ cricket: e.target.value }, () => console.log(this.state)) : this.setState({ football: e.target.value }, () => console.log(this.state));\n    }\n\n      RadioOption = () => {\n        let { radioValue } = this.state;\n        const { sport } = this.state;\n        if (sport === 'cricket') {\n          radioValue = radioOptionsCricket;\n        } else if (sport === 'football') {\n          radioValue = radioOptionsFootball;\n        }\n        return (radioValue);\n      };\n\n      getError = (field) => {\n        const { touched } = this.state;\n        if (touched[field] && this.hasErrors()) {\n          try {\n            this.schema.validateSyncAt(field, this.state);\n          } catch (err) {\n            return err.message;\n          }\n        }\n        return true;\n      };\n\n      hasErrors = () => {\n        try {\n          this.schema.validateSync(this.state);\n        } catch (err) {\n          return true;\n        }\n        return false;\n      }\n\n      isTouched = (field) => {\n        const { touched } = this.state;\n        this.setState({\n          touched: {\n            ...touched,\n            [field]: true,\n          },\n        });\n      }\n\n      render() {\n        const { sport } = this.state;\n        return (\n          <>\n            <div>\n              <p><b>Name:</b></p>\n              <TextField error={this.getError('name')} onChange={this.handleNameChange} onBlur={() => this.isTouched('name')} />\n              <p><b>Select the game you play?</b></p>\n              <SelectField\n                error={this.getError('sport')}\n                onChange={this.handleSportChange}\n                options={selectOptions}\n                defaultText=\"Select\"\n                onBlur={() => this.isTouched('sport')}\n              />\n              <div>\n                {\n                  (sport === '' || sport === 'Select') ? ''\n                    : (\n                      <>\n                        <p><b>What you do?</b></p>\n                        <RadioField\n                          error={this.getError(sport)}\n                          options={this.RadioOption()}\n                          onChange={this.handlePositionChange}\n                          onBlur={() => this.isTouched(sport)}\n                        />\n                      </>\n                    )\n                }\n              </div>\n              <div>\n                <ButtonField value=\"Cancel\" />\n                <ButtonField value=\"Submit\" disabled={this.hasErrors()} />\n              </div>\n            </div>\n          </>\n        );\n      }\n}\nexport default InputDemo;\n"]},"metadata":{},"sourceType":"module"}