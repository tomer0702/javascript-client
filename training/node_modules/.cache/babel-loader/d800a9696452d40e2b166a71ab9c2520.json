{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/l/javascript-client/training/src/components/TextField/TextField.jsx\";\nimport React from 'react';\nimport * as style from './style';\nimport '../../pages';\n\nfunction TextField(props) {\n  // eslint-disable-next-line react/prop-types\n  const {\n    disabled,\n    value,\n    error\n  } = props;\n\n  if (disabled) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"This is Disabled Input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: style.disablInput,\n        type: \"text\",\n        disabled: disabled,\n        value: \"Disabled Input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  if (value) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"A Valid Input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: style.validInput,\n        type: \"text\",\n        defaultValue: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"An Input with errors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: style.error,\n        type: \"text\",\n        value: \"101\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: \" Could not be greater than \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\n\n_c = TextField;\nexport default TextField;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextField\");","map":{"version":3,"sources":["/home/l/javascript-client/training/src/components/TextField/TextField.jsx"],"names":["React","style","TextField","props","disabled","value","error","disablInput","validInput","color"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,SAAvB;AACA,OAAO,aAAP;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB;AACA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA;AAAnB,MAA6BH,KAAnC;;AACA,MAAIC,QAAJ,EAAc;AACZ,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,KAAK,EAAEH,KAAK,CAACM,WAApB;AAAiC,QAAA,IAAI,EAAC,MAAtC;AAA6C,QAAA,QAAQ,EAAEH,QAAvD;AAAiE,QAAA,KAAK,EAAC;AAAvE;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADF;AAMD;;AACD,MAAIC,KAAJ,EAAW;AACT,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,KAAK,EAAEJ,KAAK,CAACO,UAApB;AAAgC,QAAA,IAAI,EAAC,MAArC;AAA4C,QAAA,YAAY,EAAEH;AAA1D;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADF;AAMD;;AACD,MAAIC,KAAJ,EAAW;AACT,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,KAAK,EAAEL,KAAK,CAACK,KAApB;AAA2B,QAAA,IAAI,EAAC,MAAhC;AAAuC,QAAA,KAAK,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAG,QAAA,KAAK,EAAE;AAAEG,UAAAA,KAAK,EAAE;AAAT,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA,oBADF;AAOD;AACF;;KA5BQP,S;AA6BT,eAAeA,SAAf","sourcesContent":["import React from 'react';\nimport * as style from './style';\nimport '../../pages';\n\nfunction TextField(props) {\n  // eslint-disable-next-line react/prop-types\n  const { disabled, value, error } = props;\n  if (disabled) {\n    return (\n      <>\n        <h3>This is Disabled Input</h3>\n        <input style={style.disablInput} type=\"text\" disabled={disabled} value=\"Disabled Input\" />\n      </>\n    );\n  }\n  if (value) {\n    return (\n      <>\n        <h3>A Valid Input</h3>\n        <input style={style.validInput} type=\"text\" defaultValue={value} />\n      </>\n    );\n  }\n  if (error) {\n    return (\n      <>\n        <h3>An Input with errors</h3>\n        <input style={style.error} type=\"text\" value=\"101\" />\n        <p style={{ color: 'red' }}> Could not be greater than </p>\n      </>\n    );\n  }\n}\nexport default TextField;"]},"metadata":{},"sourceType":"module"}