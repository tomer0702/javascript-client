{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/l/javascript-client/training/src/components/Slider/Slider.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Img from './style';\nimport { PUBLIC_IMAGE_FOLDER, DEFAULT_BANNER_IMAGE, total } from '../../config/constants';\nimport { getRandomNumber, getNextRoundRobin } from '../../libs/utils/math';\n\nclass Slider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      const {\n        random,\n        duration\n      } = this.props;\n      let {\n        current\n      } = this.state;\n      this.id = setInterval(() => {\n        if (random) {\n          current = getRandomNumber(total);\n        } else {\n          current = getNextRoundRobin(current, total);\n        }\n\n        this.setState({\n          current\n        });\n      }, duration);\n    };\n\n    this.componentWillUnmount = () => {\n      clearInterval(this.id);\n    };\n\n    this.state = {\n      current: -1\n    };\n  }\n\n  render() {\n    const {\n      current\n    } = this.state;\n    const {\n      altText,\n      height,\n      duration,\n      banner\n    } = this.props;\n    const {\n      defaultbanner\n    } = this.props;\n\n    if (current === -1 || banner.length === 0) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          align: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Img, {\n            src: `${PUBLIC_IMAGE_FOLDER}${defaultbanner}`,\n            alt: altText,\n            height: height,\n            duration: duration\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false);\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Img, {\n          src: `${PUBLIC_IMAGE_FOLDER}${banner[current]}`,\n          alt: altText,\n          height: height,\n          duration: duration\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default Slider;\nSlider.propTypes = {\n  altText: PropTypes.string,\n  banner: PropTypes.arrayOf(PropTypes.string),\n  defaultbanner: PropTypes.string,\n  duration: PropTypes.number,\n  height: PropTypes.number,\n  random: PropTypes.bool\n};\nSlider.defaultProps = {\n  altText: 'default banner',\n  banner: [],\n  defaultbanner: DEFAULT_BANNER_IMAGE,\n  duration: 2000,\n  height: 200,\n  random: false\n};","map":{"version":3,"sources":["/home/l/javascript-client/training/src/components/Slider/Slider.jsx"],"names":["React","Component","PropTypes","Img","PUBLIC_IMAGE_FOLDER","DEFAULT_BANNER_IMAGE","total","getRandomNumber","getNextRoundRobin","Slider","constructor","props","componentDidMount","random","duration","current","state","id","setInterval","setState","componentWillUnmount","clearInterval","render","altText","height","banner","defaultbanner","length","propTypes","string","arrayOf","number","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Img from './style';\nimport { PUBLIC_IMAGE_FOLDER, DEFAULT_BANNER_IMAGE, total } from '../../config/constants';\nimport { getRandomNumber, getNextRoundRobin } from '../../libs/utils/math';\n\nclass Slider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current: -1,\n\n    };\n  }\n\n  componentDidMount = () => {\n    const { random, duration } = this.props;\n    let { current } = this.state;\n    this.id = setInterval(() => {\n      if (random) {\n        current = getRandomNumber(total);\n      } else {\n        current = getNextRoundRobin(current, total);\n      }\n      this.setState({ current });\n    }, duration);\n  }\n\n  componentWillUnmount =() => {\n    clearInterval(this.id);\n  }\n\n  render() {\n    const { current } = this.state;\n    const {\n      altText, height, duration, banner,\n    } = this.props;\n    const { defaultbanner } = this.props;\n    if (current === -1 || banner.length === 0) {\n      return (\n        <>\n          <div align=\"center\">\n            <Img src={`${PUBLIC_IMAGE_FOLDER}${defaultbanner}`} alt={altText} height={height} duration={duration} />\n          </div>\n        </>\n      );\n    }\n    return (\n      <>\n        <div align=\"center\">\n          <Img src={`${PUBLIC_IMAGE_FOLDER}${banner[current]}`} alt={altText} height={height} duration={duration} />\n        </div>\n      </>\n    );\n  }\n}\nexport default Slider;\nSlider.propTypes = {\n  altText: PropTypes.string,\n  banner: PropTypes.arrayOf(PropTypes.string),\n  defaultbanner: PropTypes.string,\n  duration: PropTypes.number,\n  height: PropTypes.number,\n  random: PropTypes.bool,\n};\nSlider.defaultProps = {\n  altText: 'default banner',\n  banner: [],\n  defaultbanner: DEFAULT_BANNER_IMAGE,\n  duration: 2000,\n  height: 200,\n  random: false,\n};\n"]},"metadata":{},"sourceType":"module"}